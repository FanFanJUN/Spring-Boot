<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cn.lc.springboot.service.TestUserMapper">
  <resultMap id="BaseResultMap" type="com.cn.lc.springboot.model.entity.TestUser">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="IDnumber" jdbcType="INTEGER" property="idnumber" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="birthDate" jdbcType="VARCHAR" property="birthdate" />
  </resultMap>
  <insert id="insert" parameterType="com.cn.lc.springboot.model.entity.TestUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into test_user (name, password, sex, 
      IDnumber, description, birthDate
      )
    values (#{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{idnumber,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{birthdate,jdbcType=VARCHAR}
      )
  </insert>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, password, sex, IDnumber, description, birthDate
    from test_user
  </select>
  <resultMap id="BaseResultMap" type="com.cn.lc.springboot.model.entity.TestUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="IDnumber" jdbcType="INTEGER" property="idnumber" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="birthDate" jdbcType="VARCHAR" property="birthdate" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from test_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cn.lc.springboot.model.entity.TestUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into test_user (name, password, sex, 
      IDnumber, description, birthDate
      )
    values (#{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{idnumber,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{birthdate,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.cn.lc.springboot.model.entity.TestUser">
    update test_user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      IDnumber = #{idnumber,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      birthDate = #{birthdate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, password, sex, IDnumber, description, birthDate
    from test_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, password, sex, IDnumber, description, birthDate
    from test_user
  </select>
</mapper>